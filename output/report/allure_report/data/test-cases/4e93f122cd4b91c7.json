{
  "uid" : "4e93f122cd4b91c7",
  "name" : "3: get by id",
  "fullName" : "test_cases.test_swagger_allure.TestSwagger#test_get_store_order",
  "historyId" : "03eee4f853d2c2f973a70161479d687c",
  "time" : {
    "start" : 1685527870067,
    "stop" : 1685527871047,
    "duration" : 980
  },
  "description" : "这是通过store id获取store order",
  "descriptionHtml" : "<p>这是通过store id获取store order</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code",
  "statusTrace" : "self = <test_swagger_allure.TestSwagger object at 0x000001C0DC052848>\nget_global_data = <function get_global_data.<locals>._get_global_data at 0x000001C0DC0A15E8>\n\n    @allure.title(\"3: get by id\")\n    @allure.step(\"get store order by store id\")\n    @allure.description(\"这是通过store id获取store order\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story('story 3')\n    @allure.feature('feature 3')\n    def test_get_store_order(self, get_global_data):\n        store_id = get_global_data('store_id')\n        url = url_prefix + '/store/order/' + str(store_id)\n        r = a.send_request(\"get\", url)\n        logging.getLogger().info('\"GET %s %d\"' % (url, r.status_code))\n>       assert r.status_code == 500\nE       assert 200 == 500\nE        +  where 200 = <Response [200]>.status_code\n\n..\\test_cases\\test_swagger_allure.py:64: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1685527867818,
      "stop" : 1685527867819,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1685527867819,
      "stop" : 1685527867819,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1685527867819,
      "stop" : 1685527867819,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1685527867819,
      "stop" : 1685527867819,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_global_data",
    "time" : {
      "start" : 1685527870067,
      "stop" : 1685527870067,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "这是通过store id获取store order",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code",
    "statusTrace" : "self = <test_swagger_allure.TestSwagger object at 0x000001C0DC052848>\nget_global_data = <function get_global_data.<locals>._get_global_data at 0x000001C0DC0A15E8>\n\n    @allure.title(\"3: get by id\")\n    @allure.step(\"get store order by store id\")\n    @allure.description(\"这是通过store id获取store order\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.story('story 3')\n    @allure.feature('feature 3')\n    def test_get_store_order(self, get_global_data):\n        store_id = get_global_data('store_id')\n        url = url_prefix + '/store/order/' + str(store_id)\n        r = a.send_request(\"get\", url)\n        logging.getLogger().info('\"GET %s %d\"' % (url, r.status_code))\n>       assert r.status_code == 500\nE       assert 200 == 500\nE        +  where 200 = <Response [200]>.status_code\n\n..\\test_cases\\test_swagger_allure.py:64: AssertionError",
    "steps" : [ {
      "name" : "get store order by store id",
      "time" : {
        "start" : 1685527870067,
        "stop" : 1685527871045,
        "duration" : 978
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code\n",
      "statusTrace" : "  File \"C:\\Users\\vincent\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\autoTest\\test_cases\\test_swagger_allure.py\", line 64, in test_get_store_order\n    assert r.status_code == 500\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "get_global_data",
        "value" : "<function get_global_data.<locals>._get_global_data at 0x000001C0DC0A15E8>"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "43bb2ef9077d79ab",
      "name" : "log",
      "source" : "43bb2ef9077d79ab.txt",
      "type" : "text/plain",
      "size" : 348
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "story 3"
  }, {
    "name" : "feature",
    "value" : "feature 3"
  }, {
    "name" : "parentSuite",
    "value" : "test_cases"
  }, {
    "name" : "suite",
    "value" : "test_swagger_allure"
  }, {
    "name" : "subSuite",
    "value" : "TestSwagger"
  }, {
    "name" : "host",
    "value" : "DESKTOP-64CAT7Q"
  }, {
    "name" : "thread",
    "value" : "12668-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.test_swagger_allure"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4e93f122cd4b91c7.json",
  "parameterValues" : [ ]
}